<?php

namespace Tests\Unit;

use App\Data\Models\Rotas\Rotas;
use App\Data\Models\Shifts\ShiftCollection;
use App\Data\Models\Shifts\ShiftModel;
use PHPUnit\Framework\TestCase;
use App\Validators;

/**
 * @package Tests
 * @group unit
 * @group ready
 */
class RotasTest extends TestCase
{
    protected $shiftA;
    protected $shiftB;
    protected $shiftC;
    protected $shiftD;
    protected $shifts = [];
    protected $shiftCollection;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->shiftA = new ShiftModel(
            11, 21, 192,
            date_create('2021-08-30 09:00:00'),
            date_create('2021-08-30 13:30:00')
        );
        $this->shiftB = new ShiftModel(
            22, 21, 145,
            date_create('2021-08-30 12:00:00'),
            date_create('2021-08-30 17:30:00')
        );
        $this->shiftC = new \App\Data\Models\Shifts\ShiftModel(
            33, 21, 476,
            date_create('2021-08-30 13:30:00'),
            date_create('2021-08-30 17:30:00')
        );
        $this->shiftD = new \App\Data\Models\Shifts\ShiftModel(
            22, 24, 965,
            date_create('2021-08-30 09:00:00'),
            date_create('2021-08-30 13:30:00')
        );

        $this->shifts = [$this->shiftA, $this->shiftB, $this->shiftC, $this->shiftD];
        $this->shiftCollection = new ShiftCollection($this->shifts);
    }

    /**
     * A basic test example.
     *
     * @return void
     */
    public function testShiftAdd()
    {
        $rota = new Rotas();
        $rota->setId(21);
        $rota->setShifts($this->shiftCollection);

        $this->assertIsArray($rota->getShifts());
        $this->assertEquals(3, count($rota->getShifts()));
    }
}
